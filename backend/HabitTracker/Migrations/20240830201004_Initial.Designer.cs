// <auto-generated />
using System;
using HabitTracker.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HabitTracker.Migrations
{
    [DbContext(typeof(HabitTrackerContext))]
    [Migration("20240830201004_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HabitTracker.Models.Completion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("timestamp(6)");

                    b.Property<int>("HabitId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsExactTime")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HabitId");

                    b.HasIndex("TypeId");

                    b.ToTable("Completions");
                });

            modelBuilder.Entity("HabitTracker.Models.CompletionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("HabitId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HabitId");

                    b.ToTable("completionTypes");
                });

            modelBuilder.Entity("HabitTracker.Models.Habit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Habits");
                });

            modelBuilder.Entity("HabitTracker.Models.Token", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp(6)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.HasKey("Id");

                    b.ToTable("Tokens");

                    b.HasDiscriminator<string>("type").HasValue("Token");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HabitTracker.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("HabitTracker.Models.UserAuth", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("auth_type")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator<string>("auth_type").HasValue("UserAuth");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HabitTracker.Models.SessionToken", b =>
                {
                    b.HasBaseType("HabitTracker.Models.Token");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasIndex("UserId");

                    b.HasDiscriminator().HasValue("session");
                });

            modelBuilder.Entity("HabitTracker.Models.DebugAuth", b =>
                {
                    b.HasBaseType("HabitTracker.Models.UserAuth");

                    b.HasDiscriminator().HasValue("debug_disabled");
                });

            modelBuilder.Entity("HabitTracker.Models.LoginPassword", b =>
                {
                    b.HasBaseType("HabitTracker.Models.UserAuth");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("login_password");
                });

            modelBuilder.Entity("HabitTracker.Models.Completion", b =>
                {
                    b.HasOne("HabitTracker.Models.Habit", "Habit")
                        .WithMany("Completions")
                        .HasForeignKey("HabitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HabitTracker.Models.CompletionType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Habit");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("HabitTracker.Models.CompletionType", b =>
                {
                    b.HasOne("HabitTracker.Models.Habit", "Habit")
                        .WithMany("CompletionTypes")
                        .HasForeignKey("HabitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habit");
                });

            modelBuilder.Entity("HabitTracker.Models.Habit", b =>
                {
                    b.HasOne("HabitTracker.Models.User", "User")
                        .WithMany("Habits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HabitTracker.Models.UserAuth", b =>
                {
                    b.HasOne("HabitTracker.Models.User", null)
                        .WithOne("Auth")
                        .HasForeignKey("HabitTracker.Models.UserAuth", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HabitTracker.Models.SessionToken", b =>
                {
                    b.HasOne("HabitTracker.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HabitTracker.Models.Habit", b =>
                {
                    b.Navigation("CompletionTypes");

                    b.Navigation("Completions");
                });

            modelBuilder.Entity("HabitTracker.Models.User", b =>
                {
                    b.Navigation("Auth")
                        .IsRequired();

                    b.Navigation("Habits");
                });
#pragma warning restore 612, 618
        }
    }
}
